% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_fn_name.R
\name{get_fn_name}
\alias{get_fn_name}
\title{Get the name of a function}
\usage{
get_fn_name(fn = rlang::caller_fn(), fmt = "\%s", collapse = "/")
}
\arguments{
\item{fn}{a function definition (defaults to the function from which
\code{get_fn_name} is called)}

\item{fmt}{passed to \code{sprintf} with the function name e.g. \verb{\%s()} will append
brackets}

\item{collapse}{passed to paste0 in the case of multiple matching functions.
set this to \code{NULL} if you want the multiple function names as a vector.}
}
\value{
the name of the function or \code{"<unknown>"} if not known
}
\description{
Functions may be named or anonymous. When functions are used as a parameter,
for error reporting it is sometimes useful to be able to refer to the function
by the name it is given when it is defined. Sometimes functions can have multiple
names.
}
\examples{
# detecting the name when function used as a parameter. This is the 
# primary use case for `get_fn_name`
testfn2 = function(fn) {
  message("called with function: ",get_fn_name(fn))
}

testfn2(mean)
testfn2(utils::head)
# this is quite slow for some reason: testfn2(stats::quantile)

# detecting the name of a calling function, an unusual use case as this is
# normally known to the user.
testfn = function() {
  message(get_fn_name(fmt="\%s(...)")," is a function")
}

`test fn 2` = testfn
test_fn_3 = testfn
testfn()
}
