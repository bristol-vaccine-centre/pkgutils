% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/var_group.R
\name{var_group}
\alias{var_group}
\title{Extract a definition of column groups from function parameters}
\usage{
var_group(df, ..., .infer_y = FALSE)
}
\arguments{
\item{df}{a data frame which may be grouped}

\item{...}{a specification for the groupings which may be one of:
\itemize{
\item A formula or list of formulae (e.g. \code{y1 + y2 ~ x1 + x2}, z:from df grouping).
the \code{.} can be used to specify the rest of the columns, e.g. \code{y1 + y2 ~ .}
\item A list of symbols (\verb{x1, x2, ...}, z:from df grouping, y:empty)
\item A list of quosures (e.g. \code{dplyr::vars(x1,x2)}) (x, z:from df grouping, y:empty)
\item One tidyselect specification (x, z:from df grouping, y:empty)
\item Two tidyselect specifications (x, y, z:from df grouping)
\item Three tidyselect specifications (x, y, z, N.B. df must be ungrouped for this to work)
\item Column names as strings (x, z:from df grouping, y:empty)
}}

\item{.infer_y}{if only \code{z} and \code{x} is defined make \code{y} the rest of the dataframe columns}
}
\value{
a \code{var_grp_df} with defined \code{z}, \code{y} and \code{x} column groups, for use
within the \verb{var_group_*} framework.
}
\description{
This is a supporting utility for functions that have a signature of
\verb{function(df, ...)} that operate on different groups of columns, and need the
user to supply column groups in a simple way. There are 2 or 3 levels of
column grouping that can be specified easily in this style of function, and
they are generally referred to as \code{z} (i.e. group, or cohort), \code{y} (i.e.
subgroup, or response) and \code{x} (i.e. data). In some configurations,
only \code{z} and \code{x} are available.
}
\examples{
tmp = iris \%>\% dplyr::group_by(Species) \%>\% var_group(. ~ Petal.Width + Sepal.Width)

tmp = iris \%>\% dplyr::group_by(Species) \%>\% 
  var_group(tidyselect::starts_with("Sepal"),tidyselect::starts_with("Petal"))
}
\concept{var_group}
