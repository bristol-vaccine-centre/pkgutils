% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/var_group_apply.R
\name{var_group_compare}
\alias{var_group_compare}
\title{Cross compare subgroups of data to each other}
\usage{
var_group_compare(var_grp_df, ..., .diagonal = FALSE)
}
\arguments{
\item{var_grp_df}{a data frame with major and data groupings}

\item{...}{a set of named functions. The functions must take 2 vectors of the
type of the columns being compared and generate a single result (which may be a
complex S3 object such as a \code{lm}). Such functions
might be for example be \code{chisq.test} for factor columns or \code{cor} for numeric
columns.}

\item{.diagonal}{should a column be compared with itself? this is usually \code{FALSE}}
}
\value{
a dataframe containing the major \code{z} groupings and unique binary
combinations of \code{y} and \code{x} columnsas \code{y} and \code{x} columns. The named
comparisons provided in \code{...} form the other columns. If these are not
primitive types this will be a list column.
}
\description{
This function helps construct group wise cross-correlation matrices and other between column
comparisons from a dataframe. We assume we have a data with a major grouping
and then data columns we wish to compare to each other. We specify the
columns to compare to each other as a formula or as a tidyselect using a \code{var_grp_df}
and using this we use these a set of columns to compare.
}
\details{
Although the examples here are functional we generally expect these to be wrapped
within a function within a package where the comparisons are pre-defined, and
the \code{var_group} framework is hidden from the user.
}
\examples{
iris \%>\% group_by(Species) \%>\% var_group(~ .) \%>\%
  var_group_compare(
    correlation = cor
  )
  
diamonds \%>\% var_group(tidyselect::where(is.factor)) \%>\% 
  var_group_compare(
    chi.p.value = ~ stats::chisq.test(.x,.y)$p.value
  )
  
  
}
\concept{var_group}
